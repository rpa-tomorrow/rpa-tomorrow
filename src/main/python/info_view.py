#!/usr/bin/python
# -*- coding: utf-8 -*-

from PyQt5 import QtWidgets, QtGui, QtCore


class InfoView(QtWidgets.QWidget):
    def __init__(self, main_window, *args, **kwargs):
        super(InfoView, self).__init__(*args, **kwargs)
        self.main_window = main_window

        scroll_area = QtWidgets.QScrollArea()
        scroll_area.setMaximumWidth(960)
        scroll_area.setWidgetResizable(True)

        main_layout = QtWidgets.QHBoxLayout()
        main_layout.addWidget(scroll_area)

        widget = QtWidgets.QWidget()
        widget.setSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        layout = QtWidgets.QVBoxLayout()
        layout.setSpacing(16)

        self.title = QtWidgets.QLabel("Info")
        self.title.setObjectName("viewTitle")
        self.title.setMaximumHeight(48)
        layout.addWidget(self.title)

        self.doc = QtWidgets.QLabel(
            """<h2>RPA Tomorrow</h2>
<h3>About</h3>
RPA Tomorrow is an open source project for Robotic Process Automation (RPA) created powered
by Natural Language Processing. RPA Tomorrow project was proposed by Substorm AI and written
by students at Luleå University of Technology.

<h3>RPA Tomorrow Team</h3>"""
        )

        self.doc.setMaximumWidth(860)
        self.doc.setWordWrap(True)

        layout.addWidget(self.doc)
        layout.addWidget(ContributorView(":hugowangler.png", "Hugo Wangler", "Automation Developer"))
        layout.addWidget(ContributorView(":markhakansson.jpg", "Mark Håkansson", "AI Developer"))
        layout.addWidget(ContributorView(":blinningjr.png", "Niklas Lundberg", "Automation Developer"))
        layout.addWidget(ContributorView(":widforss.jpg", "Aron Widforss", "Automation Developer"))
        layout.addWidget(ContributorView(":97gushan.png", "Gustav Hansson", "Automation Developer"))
        layout.addWidget(ContributorView(":aleman778.jpg", "Alexander Mennborg", "GUI Developer"))
        layout.addWidget(ContributorView(":viktorfrom.jpg", "Viktor From", "AI Developer"))

        # Generated by running this command in our conda environment
        # conda list | awk '{if(NR>3) printf("%s=%s\n", $1, $2)}' | xargs -I{}
        # conda search --info --json "{}" | jq --raw-output '.[][0] | "<tr>\n
        # <td>\(.name)</td>\n    <td>\(.version)</td>\n    <td>\(.license)</td>\n</tr>"'
        # NOTE: above 3 lines is ONE command, thanks to flake8.
        # NOTE: requires program called `jq` which you should be able to install via any package manager.
        self.licenses = QtWidgets.QLabel(
            """<h3>Licenses</h3>
<table>
    <tr>
        <th style="text-align:left">Name</th>
        <th style="text-align:left">Version</th>
        <th style="text-align:left">License</th>
    </tr>
    <tr>
        <td>_libgcc_mutex</td>
        <td>0.1</td>
        <td>GNU</td>
    </tr>
    <tr>
        <td>aiohttp</td>
        <td>3.6.3</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>altgraph</td>
        <td>0.17</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>appdirs</td>
        <td>1.4.4</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>async-timeout</td>
        <td>3.0.1</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>attrs</td>
        <td>20.2.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>black</td>
        <td>19.10b0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>blas</td>
        <td>1.0</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>blinker</td>
        <td>1.4</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>brotlipy</td>
        <td>0.7.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>cachetools</td>
        <td>4.1.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>catalogue</td>
        <td>1.0.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>certifi</td>
        <td>2020.11.8</td>
        <td>ISC</td>
    </tr>
    <tr>
        <td>cffi</td>
        <td>1.14.3</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>chardet</td>
        <td>3.0.4</td>
        <td>LGPL2</td>
    </tr>
    <tr>
        <td>click</td>
        <td>7.1.2</td>
        <td>BSD-3-Clause</td>
    </tr>
    <tr>
        <td>colorama</td>
        <td>0.4.4</td>
        <td>BSD-3-Clause</td>
    </tr>
    <tr>
        <td>commonmark</td>
        <td>0.9.1</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>coverage</td>
        <td>5.3</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>cryptography</td>
        <td>3.1.1</td>
        <td>Apache-2.0 AND BSD-3-Clause AND PSF-2.0</td>
    </tr>
    <tr>
        <td>cymem</td>
        <td>2.0.3</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>cython-blis</td>
        <td>0.4.1</td>
        <td>BSD-3-Clause</td>
    </tr>
    <tr>
        <td>flake8</td>
        <td>3.8.3</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>flake8-polyfill</td>
        <td>1.0.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>future</td>
        <td>0.18.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>google-auth</td>
        <td>1.22.0</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>google-auth-oauthlib</td>
        <td>0.4.1</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>googleapis-common-protos</td>
        <td>1.52.0</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>idna</td>
        <td>2.10</td>
        <td>BSD Like</td>
    </tr>
    <tr>
        <td>importlib-metadata</td>
        <td>1.7.0</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>importlib_metadata</td>
        <td>1.7.0</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>intel-openmp</td>
        <td>2020.2</td>
        <td>LicenseRef-ProprietaryIntel</td>
    </tr>
    <tr>
        <td>jsonschema</td>
        <td>3.0.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>ld_impl_linux-64</td>
        <td>2.33.1</td>
        <td>GPL 3</td>
    </tr>
    <tr>
        <td>libedit</td>
        <td>3.1.20191231</td>
        <td>BSD-2-Clause</td>
    </tr>
    <tr>
        <td>libffi</td>
        <td>3.3</td>
        <td>Custom</td>
    </tr>
    <tr>
        <td>libgcc-ng</td>
        <td>9.1.0</td>
        <td>GPL</td>
    </tr>
    <tr>
        <td>libprotobuf</td>
        <td>3.13.0.1</td>
        <td>BSD-3-Clause</td>
    </tr>
    <tr>
        <td>libstdcxx-ng</td>
        <td>9.1.0</td>
        <td>GPL3 with runtime exception</td>
    </tr>
    <tr>
        <td>libxml2</td>
        <td>2.9.10</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>libxslt</td>
        <td>1.1.33</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>lxml</td>
        <td>4.6.1</td>
        <td>BSD-3-Clause and GPL-2.0-only and ZPL-2.0 and LicenseRef-ElementTree</td>
    </tr>
    <tr>
        <td>macholib</td>
        <td>1.14</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>mccabe</td>
        <td>0.6.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>mkl</td>
        <td>2020.2</td>
        <td>LicenseRef-ProprietaryIntel</td>
    </tr>
    <tr>
        <td>mkl-service</td>
        <td>2.3.0</td>
        <td>3-clause BSD</td>
    </tr>
    <tr>
        <td>mkl_fft</td>
        <td>1.2.0</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>mkl_random</td>
        <td>1.1.1</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>more-itertools</td>
        <td>8.5.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>multidict</td>
        <td>4.7.5</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>murmurhash</td>
        <td>1.0.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>mypy_extensions</td>
        <td>0.4.3</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>ncurses</td>
        <td>6.2</td>
        <td>Free software (MIT-like)</td>
    </tr>
    <tr>
        <td>numpy</td>
        <td>1.19.1</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>numpy-base</td>
        <td>1.19.1</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>oauthlib</td>
        <td>3.0.1</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>openssl</td>
        <td>1.1.1h</td>
        <td>OpenSSL</td>
    </tr>
    <tr>
        <td>packaging</td>
        <td>20.4</td>
        <td>Apache 2.0 or BSD 2-Clause</td>
    </tr>
    <tr>
        <td>pathspec</td>
        <td>0.7.0</td>
        <td>MPL-2.0</td>
    </tr>
    <tr>
        <td>pefile</td>
        <td>2019.4.18</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pep8-naming</td>
        <td>0.11.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pip</td>
        <td>20.2.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>plac</td>
        <td>0.9.6</td>
        <td>BSD 2-Clause</td>
    </tr>
    <tr>
        <td>pluggy</td>
        <td>0.13.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>portaudio</td>
        <td>19.6.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>preshed</td>
        <td>3.0.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>proto-plus</td>
        <td>1.11.0</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>protobuf</td>
        <td>3.13.0.1</td>
        <td>BSD-3-Clause</td>
    </tr>
    <tr>
        <td>py</td>
        <td>1.9.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pyasn1</td>
        <td>0.4.8</td>
        <td>BSD 2-Clause</td>
    </tr>
    <tr>
        <td>pyasn1-modules</td>
        <td>0.2.7</td>
        <td>BSD 2-Clause</td>
    </tr>
    <tr>
        <td>pyaudio</td>
        <td>0.2.11</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pycodestyle</td>
        <td>2.6.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pycparser</td>
        <td>2.20</td>
        <td>BSD 3-clause</td>
    </tr>
    <tr>
        <td>pyflakes</td>
        <td>2.2.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pygments</td>
        <td>2.7.2</td>
        <td>BSD-2-clause</td>
    </tr>
    <tr>
        <td>pyinstaller</td>
        <td>3.4</td>
        <td>GPL 2</td>
    </tr>
    <tr>
        <td>pyjwt</td>
        <td>1.7.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pyopenssl</td>
        <td>19.1.0</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>pyparsing</td>
        <td>2.4.7</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pyrsistent</td>
        <td>0.17.3</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pysocks</td>
        <td>1.7.1</td>
        <td>BSD 3-Clause</td>
    </tr>
    <tr>
        <td>pytest</td>
        <td>6.1.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pytest-cov</td>
        <td>2.10.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>python</td>
        <td>3.8.5</td>
        <td>PSF</td>
    </tr>
    <tr>
        <td>python-dateutil</td>
        <td>2.8.1</td>
        <td>BSD 3 Clause</td>
    </tr>
    <tr>
        <td>python-levenshtein</td>
        <td>0.12.0</td>
        <td>GPL-2.0</td>
    </tr>
    <tr>
        <td>pytz</td>
        <td>2020.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>pyyaml</td>
        <td>5.3.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>readline</td>
        <td>8.0</td>
        <td>GPL-3.0</td>
    </tr>
    <tr>
        <td>regex</td>
        <td>2020.7.14</td>
        <td>Python-2.0</td>
    </tr>
    <tr>
        <td>requests</td>
        <td>2.24.0</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>requests-oauthlib</td>
        <td>1.3.0</td>
        <td>ISC</td>
    </tr>
    <tr>
        <td>rsa</td>
        <td>4.6</td>
        <td>Apache-2.0</td>
    </tr>
    <tr>
        <td>setuptools</td>
        <td>49.6.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>simplejson</td>
        <td>3.17.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>six</td>
        <td>1.15.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>spacy</td>
        <td>2.3.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>sqlite</td>
        <td>3.33.0</td>
        <td>Public-Domain (http://www.sqlite.org/copyright.html)</td>
    </tr>
    <tr>
        <td>srsly</td>
        <td>1.0.2</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>thinc</td>
        <td>7.4.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>tk</td>
        <td>8.6.10</td>
        <td>Tcl/Tk</td>
    </tr>
    <tr>
        <td>toml</td>
        <td>0.10.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>tqdm</td>
        <td>4.49.0</td>
        <td>MPLv2.0, MIT</td>
    </tr>
    <tr>
        <td>typed-ast</td>
        <td>1.4.1</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>typing_extensions</td>
        <td>3.7.4.3</td>
        <td>PSF-2.0</td>
    </tr>
    <tr>
        <td>tzlocal</td>
        <td>2.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>urllib3</td>
        <td>1.25.10</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>wasabi</td>
        <td>0.8.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>wheel</td>
        <td>0.35.1</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>xz</td>
        <td>5.2.5</td>
        <td>LGPL-2.1 and GPL-2.0</td>
    </tr>
    <tr>
        <td>yaml</td>
        <td>0.2.5</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>yarl</td>
        <td>1.5.1</td>
        <td>Apache 2.0</td>
    </tr>
    <tr>
        <td>zipp</td>
        <td>3.1.0</td>
        <td>MIT</td>
    </tr>
    <tr>
        <td>zlib</td>
        <td>1.2.11</td>
        <td>zlib</td>
    </tr>
</table>
"""
        )

        layout.addWidget(self.licenses)
        layout.addStretch(1)

        self.setLayout(main_layout)
        widget.setLayout(layout)
        scroll_area.setWidget(widget)


class ContributorView(QtWidgets.QWidget):
    def __init__(self, avatar_file, name, task):
        super(ContributorView, self).__init__()
        layout = QtWidgets.QGridLayout()
        layout.setHorizontalSpacing(12)
        layout.setContentsMargins(0, 0, 0, 0)

        # Make rounded avatar bitmap
        avatar_pixmap = QtGui.QPixmap(avatar_file)
        bitmap = QtGui.QBitmap(avatar_pixmap.width(), avatar_pixmap.height())
        bitmap.fill(QtCore.Qt.color0)
        p = QtGui.QPainter(bitmap)
        p.setBrush(QtCore.Qt.color1)
        p.drawRoundedRect(0, 0, bitmap.width(), bitmap.height(), bitmap.width() / 2, bitmap.height() / 2)
        avatar_pixmap.setMask(bitmap)
        p.end()

        self.avatar_label = QtWidgets.QLabel()
        self.avatar_label.setPixmap(avatar_pixmap)
        self.avatar_label.setScaledContents(True)
        self.avatar_label.setObjectName("roundedAvatar")
        layout.addWidget(self.avatar_label, 0, 0, 2, 1)

        self.name_label = QtWidgets.QLabel(name)
        layout.addWidget(self.name_label, 0, 1)

        self.task_label = QtWidgets.QLabel(task)
        self.task_label.setObjectName("fontFaint")
        layout.addWidget(self.task_label, 1, 1)

        self.setLayout(layout)


# NOTE(alexander): DEV mode entry point only!!!
if __name__ == "__main__":
    from main import initialize_app
    import sys

    appctxt, window = initialize_app()
    window.set_active_view(6)
    exit_code = appctxt.app.exec_()
    sys.exit(exit_code)
